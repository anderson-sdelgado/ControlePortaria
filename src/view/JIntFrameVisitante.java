/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.VisitanteCTR;
import java.awt.GridLayout;
import java.text.ParseException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import javax.swing.text.MaskFormatter;
import model.domain.Visitante;

/**
 *
 * @author anderson
 */
public class JIntFrameVisitante extends javax.swing.JInternalFrame {

    private VisitanteCTR visitanteCTR;
    private Boolean status; //true = inserir; false = salvar;

    /**
     * Creates new form jIntFrameVisitante
     */
    public JIntFrameVisitante() {

        initComponents();
        status = false;
        visitanteCTR = new VisitanteCTR();
        exibirInicialTela();
        DocumentFilter filter = new UppercaseDocumentFilter();
        ((AbstractDocument) jTextFieldPesq.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) jTextFieldRG.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) jTextFieldNome.getDocument()).setDocumentFilter(filter);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabelPesq = new javax.swing.JLabel();
        jTextFieldPesq = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVisitante = new javax.swing.JTable();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jLabelCod = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jLabelCPF = new javax.swing.JLabel();
        jLabelRG = new javax.swing.JLabel();
        jLabelCodigo = new javax.swing.JLabel();
        jTextFieldRG = new javax.swing.JTextField();
        jFormattedTextFieldCPF = new javax.swing.JFormattedTextField();
        jTextFieldNome = new javax.swing.JTextField();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(600, 550));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabelPesq.setText("PESQUISA:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        getContentPane().add(jLabelPesq, gridBagConstraints);

        jTextFieldPesq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPesqKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPesqKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        getContentPane().add(jTextFieldPesq, gridBagConstraints);

        jTableVisitante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CPF", "RG", "NOME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVisitante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVisitanteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVisitante);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 460;
        gridBagConstraints.ipady = 200;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jButtonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/novo.gif"))); // NOI18N
        jButtonNovo.setText("NOVO");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jButtonNovo, gridBagConstraints);

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salvar.gif"))); // NOI18N
        jButtonSalvar.setText("SALVAR");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jButtonSalvar, gridBagConstraints);

        jButtonExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/deletar.gif"))); // NOI18N
        jButtonExcluir.setText("EXCLUIR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jButtonExcluir, gridBagConstraints);

        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sair.gif"))); // NOI18N
        jButtonFechar.setText("FECHAR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jButtonFechar, gridBagConstraints);

        jLabelCod.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelCod.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelCod.setText("CODIGO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        getContentPane().add(jLabelCod, gridBagConstraints);

        jLabelNome.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelNome.setText("NOME:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        getContentPane().add(jLabelNome, gridBagConstraints);

        jLabelCPF.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelCPF.setText("CPF:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        getContentPane().add(jLabelCPF, gridBagConstraints);

        jLabelRG.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelRG.setText("RG:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        getContentPane().add(jLabelRG, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        getContentPane().add(jLabelCodigo, gridBagConstraints);

        jTextFieldRG.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextFieldRG, gridBagConstraints);

        try {
            jFormattedTextFieldCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldCPF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jFormattedTextFieldCPF, gridBagConstraints);

        jTextFieldNome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jTextFieldNome, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableVisitanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVisitanteMouseClicked
        // TODO add your handling code here:

        preencheCampo(visitanteCTR.getPesqVisitante((Integer) jTableVisitante.getValueAt(jTableVisitante.getSelectedRow(), 0)));

    }//GEN-LAST:event_jTableVisitanteMouseClicked

    private void jTextFieldPesqKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesqKeyPressed
        // TODO add your handling code here:


    }//GEN-LAST:event_jTextFieldPesqKeyPressed

    private void jTextFieldPesqKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesqKeyReleased

// TODO add your handling code here:
        exibirPesquisa(jTextFieldPesq.getText());

    }//GEN-LAST:event_jTextFieldPesqKeyReleased

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        // TODO add your handling code here:

        novoReg();

    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:

        if ((jFormattedTextFieldCPF.getValue() == null)
                || (jTextFieldRG.getText().trim().length() == 0)
                || (jTextFieldNome.getText().trim().length() == 0)) {
            JOptionPane.showMessageDialog(null, "O REGISTRO NÃO SALVO! HÁ CAMPOS NULOS! POR FAVOR, PREENCHA TODOS OS CAMPOS.");
        } else {
            if (status) {
                Visitante visitante = new Visitante();
                visitante.setId(Integer.parseInt(jLabelCodigo.getText()));
                visitante.setCpf(jFormattedTextFieldCPF.getText().replaceAll("\\.", "").replaceAll("-", ""));
                visitante.setRg(jTextFieldRG.getText());
                visitante.setNome(jTextFieldNome.getText());
                if (visitanteCTR.inserirReg(visitante)) {
                    DefaultTableModel modelTable = (DefaultTableModel) jTableVisitante.getModel();
                    modelTable.setValueAt(jFormattedTextFieldCPF.getText(), 0, 1);
                    modelTable.setValueAt(jTextFieldRG.getText(), 0, 2);
                    modelTable.setValueAt(jTextFieldNome.getText(), 0, 3);
                    JOptionPane.showMessageDialog(null, "O REGISTRO SALVO COM SUCESSO!");
                }
            } else {

            }
        }

    }//GEN-LAST:event_jButtonSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JFormattedTextField jFormattedTextFieldCPF;
    private javax.swing.JLabel jLabelCPF;
    private javax.swing.JLabel jLabelCod;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelPesq;
    private javax.swing.JLabel jLabelRG;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableVisitante;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPesq;
    private javax.swing.JTextField jTextFieldRG;
    // End of variables declaration//GEN-END:variables

    public void exibirInicialTela() {

        jTableVisitante.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTableVisitante.getColumnModel().getColumn(1).setPreferredWidth(120);
        jTableVisitante.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableVisitante.getColumnModel().getColumn(3).setPreferredWidth(200);

        DefaultTableModel modelTable = (DefaultTableModel) jTableVisitante.getModel();
        modelTable.setNumRows(0);

        visitanteCTR.getVisitantesTabela().forEach((v) -> {
            modelTable.addRow(new Object[]{
                v.getId(),
                v.getFormatadoCpf(),
                v.getRg(),
                v.getNome()});
        });

        jTableVisitante.addRowSelectionInterval(0, 0);
        preencheCampo(visitanteCTR.getVisitantesTabela().get(0));

    }

    public void preencheCampo(Visitante v) {
        jLabelCodigo.setText(String.valueOf(v.getId()));
        jFormattedTextFieldCPF.setText(v.getCpf() != null ? v.getCpf() : "");
        jTextFieldRG.setText(v.getRg() != null ? v.getRg() : "");
        jTextFieldNome.setText(v.getNome() != null ? v.getNome() : "");
        
    }

    public void exibirPesquisa(String valor) {

        TableRowSorter<DefaultTableModel> tr;
        tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) jTableVisitante.getModel());
        jTableVisitante.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(valor));

    }

    public void novoReg() {

        status = true;
        jButtonNovo.setEnabled(false);

        DefaultTableModel modelTable = (DefaultTableModel) jTableVisitante.getModel();
        modelTable.insertRow(0, new Object[]{
            visitanteCTR.ultimoReg().getId() + 1,
            "",
            "",
            ""});
        jTableVisitante.clearSelection();
        jTableVisitante.addRowSelectionInterval(0, 0);

        jLabelCodigo.setText(String.valueOf(visitanteCTR.ultimoReg().getId() + 1));
        jFormattedTextFieldCPF.setText("");
        jTextFieldRG.setText("");
        jTextFieldNome.setText("");

    }

}

class UppercaseDocumentFilter extends DocumentFilter {

    public void insertString(DocumentFilter.FilterBypass fb, int offset,
            String text, AttributeSet attr) throws BadLocationException {
        fb.insertString(offset, text.toUpperCase(), attr);
    }

    public void replace(DocumentFilter.FilterBypass fb, int offset, int length,
            String text, AttributeSet attrs) throws BadLocationException {
        fb.replace(offset, length, text.toUpperCase(), attrs);
    }
}
