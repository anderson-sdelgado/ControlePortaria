/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.FotoCTR;
import control.VisitaCTR;
import java.io.InputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DocumentFilter;
import javax.swing.text.MaskFormatter;
import model.domain.Func;
import model.domain.Visita;
import model.domain.Visitante;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author anderson
 */
public class JIntFramePainelVisitante extends javax.swing.JInternalFrame {

    private final VisitaCTR visitaCTR;
    private final FotoCTR fotoCTR;
    private DefaultTableModel modelTable;

    /**
     * Creates new form JIntFramePainelVisitante
     */
    public JIntFramePainelVisitante() {
        initComponents();

        visitaCTR = new VisitaCTR();
        fotoCTR = new FotoCTR();
        visitaCTR.carregListaVisitaNaEmpresa();
        modelTable = (DefaultTableModel) jTableVisita.getModel();
        exibicaoInicial();

        DocumentFilter filter = new UppercaseDocumentFilter();
        ((AbstractDocument) jTextFieldPesq.getDocument()).setDocumentFilter(filter);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabelPesquisa = new javax.swing.JLabel();
        jTextFieldPesq = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVisita = new javax.swing.JTable();
        jLabelDescrFoto1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelFoto = new javax.swing.JLabel();
        jLabelDescrFoto2 = new javax.swing.JLabel();
        jLabelDuracao = new javax.swing.JLabel();
        jButtonImprCracha = new javax.swing.JButton();
        jLabelHoraDuracao = new javax.swing.JLabel();

        setClosable(true);
        setTitle("VISITANTE DENTRO DA EMPRESA");
        setPreferredSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabelPesquisa.setText("PESQUISA:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        getContentPane().add(jLabelPesquisa, gridBagConstraints);

        jTextFieldPesq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPesqKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        getContentPane().add(jTextFieldPesq, gridBagConstraints);

        jTableVisita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "CPF", "RG", "NOME", "ENTRADA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVisita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVisitaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVisita);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 500;
        gridBagConstraints.ipady = 200;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jLabelDescrFoto1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelDescrFoto1.setText("FOTO DO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(70, 0, 0, 0);
        getContentPane().add(jLabelDescrFoto1, gridBagConstraints);

        jPanel1.setMinimumSize(new java.awt.Dimension(320, 240));
        jPanel1.setPreferredSize(new java.awt.Dimension(320, 240));
        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabelFoto, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabelDescrFoto2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelDescrFoto2.setText("VISITANTE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        getContentPane().add(jLabelDescrFoto2, gridBagConstraints);

        jLabelDuracao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelDuracao.setText("Duração");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(70, 0, 0, 0);
        getContentPane().add(jLabelDuracao, gridBagConstraints);

        jButtonImprCracha.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonImprCracha.setText("GERAR CRACHÁ");
        jButtonImprCracha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprCrachaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipady = 40;
        getContentPane().add(jButtonImprCracha, gridBagConstraints);

        jLabelHoraDuracao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelHoraDuracao.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        getContentPane().add(jLabelHoraDuracao, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonImprCrachaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprCrachaActionPerformed

        try {
            // TODO add your handling code here:

            JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(
                    visitaCTR.getVisitaList((Integer) jTableVisita.getValueAt(jTableVisita.getSelectedRow(), jTableVisita.convertColumnIndexToView(0))));

            Map parametros = new HashMap();

            InputStream jasperFile = Thread.currentThread().getClass().getResourceAsStream("/view/ireport/crachaReport.jasper");
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(jasperFile);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, ds);
            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
            jasperViewer.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(JIntFramePainelVisitante.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonImprCrachaActionPerformed

    private void jTextFieldPesqKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesqKeyReleased
        // TODO add your handling code here:

        exibirPesquisa(jTextFieldPesq.getText());

    }//GEN-LAST:event_jTextFieldPesqKeyReleased

    private void jTableVisitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVisitaMouseClicked
        // TODO add your handling code here:

        if (evt.getClickCount() == 2) {
            if (visitaCTR.fechaVisita((Integer) jTableVisita.getValueAt(jTableVisita.getSelectedRow(), jTableVisita.convertColumnIndexToView(0)))) {
                removeTabela(jTableVisita.convertRowIndexToModel(jTableVisita.getSelectedRow()));
            }
        }

    }//GEN-LAST:event_jTableVisitaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonImprCracha;
    private javax.swing.JLabel jLabelDescrFoto1;
    private javax.swing.JLabel jLabelDescrFoto2;
    private javax.swing.JLabel jLabelDuracao;
    private javax.swing.JLabel jLabelFoto;
    private javax.swing.JLabel jLabelHoraDuracao;
    private javax.swing.JLabel jLabelPesquisa;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableVisita;
    private javax.swing.JTextField jTextFieldPesq;
    // End of variables declaration//GEN-END:variables

    public void exibicaoInicial() {

        jTableVisita.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTableVisita.getColumnModel().getColumn(1).setPreferredWidth(120);
        jTableVisita.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableVisita.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTableVisita.getColumnModel().getColumn(4).setPreferredWidth(80);

        modelTable.setNumRows(0);

        visitaCTR.getVisitaList().forEach((v) -> {
            modelTable.addRow(new Object[]{
                v.getIdVisita(),
                formatarCpf(v.getVisitante().getCpfVisitante()),
                v.getVisitante().getRgVisitante(),
                v.getVisitante().getNomeVisitante(),
                v.getDataHoraEntradaVisita()});
        });

        jTableVisita.addRowSelectionInterval(0, 0);
        preencheCampo(visitaCTR.getVisitaList().get(0));

    }

    public String formatarCpf(String cpf) {
        String cpfForm = "";
        try {
            MaskFormatter formatter = new MaskFormatter("###.###.###-##");
            formatter.setValueContainsLiteralCharacters(false);
            cpfForm = formatter.valueToString(cpf.equals("NULL") ? "" : cpf);
        } catch (ParseException ex) {
            Logger.getLogger(Visitante.class.getName()).log(Level.SEVERE, null, ex);
        }
        return cpfForm;
    }

    public void preencheCampo(Visita visita) {
        try {
            abrirFoto(visita.getVisitante().getIdVisitante());
            Date dataHora = new Date();
            SimpleDateFormat formatoDataHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
            SimpleDateFormat formatoHora = new SimpleDateFormat("HH:mm:ss");
            String dataHoraEntrada = formatoData.format(dataHora) + " " + visita.getDataHoraEntradaVisita();
            Date dataEntrada = formatoDataHora.parse(dataHoraEntrada);
            System.out.println(formatoDataHora.format(dataHora));
            System.out.println(formatoDataHora.format(dataEntrada));
            dataHora.setTime((dataHora.getTime() - dataEntrada.getTime()) - (21 * 3600000));
            jLabelHoraDuracao.setText(formatoHora.format(dataHora));
        } catch (Exception ex) {
            Logger.getLogger(JIntFramePainelVisitante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void abrirFoto(int idVisitante) {
        try {
            if (fotoCTR.abrirFotoJPG(idVisitante)) {
                jLabelFoto.setIcon(fotoCTR.getImageIcon());
            }
        } catch (Exception ex) {
            Logger.getLogger(JIntFrameVisita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void exibirPesquisa(String valor) {

        TableRowSorter<DefaultTableModel> tr;
        tr = new TableRowSorter<DefaultTableModel>(modelTable);
        jTableVisita.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(valor));

        if (tr.getViewRowCount() > 0) {
            jTableVisita.addRowSelectionInterval(0, 0);
        }

    }

    public void removeTabela(int i) {
        modelTable.removeRow(i);
    }

}
